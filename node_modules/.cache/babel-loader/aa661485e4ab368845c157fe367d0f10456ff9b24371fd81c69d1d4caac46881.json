{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chokd\\\\Documents\\\\P3\\\\Projet7-Back-end\\\\frontend\\\\src\\\\components\\\\DropdownMenu\\\\DropdownMenu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './DropdownMenu.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DropdownMenu(_ref) {\n  _s();\n  let {\n    categories,\n    onFilterChange,\n    backgroundClass\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const dropdownRef = useRef(null);\n  const toggleDropdown = () => setIsOpen(!isOpen);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n  const handleCategorySelect = category => {\n    const updatedCategories = selectedCategories.includes(category) ? selectedCategories.filter(c => c !== category) : [...selectedCategories, category];\n    setSelectedCategories(updatedCategories);\n    onFilterChange(updatedCategories);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dropdownContainer,\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.dropdownButton,\n      type: \"button\",\n      onClick: toggleDropdown,\n      children: \"Cat\\xE9gories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.dropdownMenu} ${styles[backgroundClass]}`,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.categoryList,\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.categoryItem,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedCategories.includes(category),\n              onChange: () => handleCategorySelect(category)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this), category]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(DropdownMenu, \"Lglt2BtgWxPbDdnfbpwXilGMRkk=\");\n_c = DropdownMenu;\nDropdownMenu.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n  backgroundClass: PropTypes.string\n};\nDropdownMenu.defaultProps = {\n  backgroundClass: ''\n};\nexport default DropdownMenu;\nvar _c;\n$RefreshReg$(_c, \"DropdownMenu\");","map":{"version":3,"names":["React","useState","useRef","useEffect","PropTypes","styles","DropdownMenu","categories","onFilterChange","backgroundClass","isOpen","setIsOpen","selectedCategories","setSelectedCategories","dropdownRef","toggleDropdown","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleCategorySelect","category","updatedCategories","includes","filter","c","dropdownContainer","dropdownButton","dropdownMenu","categoryList","map","categoryItem","propTypes","arrayOf","string","isRequired","func","defaultProps"],"sources":["C:/Users/chokd/Documents/P3/Projet7-Back-end/frontend/src/components/DropdownMenu/DropdownMenu.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './DropdownMenu.module.css';\n\nfunction DropdownMenu({ categories, onFilterChange, backgroundClass }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const dropdownRef = useRef(null);\n\n  const toggleDropdown = () => setIsOpen(!isOpen);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n\n  const handleCategorySelect = (category) => {\n    const updatedCategories = selectedCategories.includes(category)\n      ? selectedCategories.filter((c) => c !== category)\n      : [...selectedCategories, category];\n\n    setSelectedCategories(updatedCategories);\n    onFilterChange(updatedCategories);\n  };\n\n  return (\n    <div className={styles.dropdownContainer} ref={dropdownRef}>\n      <button className={styles.dropdownButton} type=\"button\" onClick={toggleDropdown}>\n        Cat√©gories\n      </button>\n\n      {isOpen && (\n        <div className={`${styles.dropdownMenu} ${styles[backgroundClass]}`}>\n          <ul className={styles.categoryList}>\n            {categories.map((category) => (\n              <li key={category} className={styles.categoryItem}>\n                <label htmlFor=\"category\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedCategories.includes(category)}\n                    onChange={() => handleCategorySelect(category)}\n                  />\n                  {category}\n                </label>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nDropdownMenu.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onFilterChange: PropTypes.func.isRequired,\n  backgroundClass: PropTypes.string,\n};\n\nDropdownMenu.defaultProps = {\n  backgroundClass: '',\n};\n\nexport default DropdownMenu;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}