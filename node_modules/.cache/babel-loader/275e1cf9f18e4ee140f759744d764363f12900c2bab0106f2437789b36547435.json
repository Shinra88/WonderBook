{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chokd\\\\Documents\\\\P3\\\\Projet7-Back-end\\\\frontend\\\\src\\\\Modals\\\\ChangePass\\\\ChangePass.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport styles from './ChangePass.module.css';\nimport { API_ROUTES } from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChangePass(_ref) {\n  _s();\n  let {\n    onClose\n  } = _ref;\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [notification, setNotification] = useState({\n    error: false,\n    message: ''\n  });\n\n  // Fermer la modal en appuyant sur \"Échap\"\n  useEffect(() => {\n    const handleEscape = event => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n    document.addEventListener('keydown', handleEscape);\n    return () => document.removeEventListener('keydown', handleEscape);\n  }, [onClose]);\n  const handleClickOutside = event => {\n    if (event.target.classList.contains(styles.modalBackground)) {\n      onClose();\n    }\n  };\n  const changePass = async () => {\n    if (newPassword !== confirmPassword) {\n      setNotification({\n        error: true,\n        message: 'Les mots de passe ne correspondent pas.'\n      });\n      return;\n    }\n    try {\n      setIsLoading(true);\n      const response = await axios.post(API_ROUTES.CHANGE_PASS, {\n        oldPassword,\n        newPassword\n      });\n      if (response.status !== 200) {\n        setNotification({\n          error: true,\n          message: 'Une erreur est survenue.'\n        });\n      } else {\n        setNotification({\n          error: false,\n          message: 'Mot de passe changé avec succès !'\n        });\n        onClose(); // Ferme la modal après validation\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setNotification({\n        error: true,\n        message: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Une erreur est survenue.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.modalBackground,\n    onClick: handleClickOutside,\n    role: \"presentation\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalContent,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"change-pass-title\",\n        children: \"Changer le mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), notification.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: notification.error ? styles.errorMessage : styles.successMessage,\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"oldPassword\",\n        children: [\"Ancien mot de passe\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"oldPassword\",\n          value: oldPassword,\n          onChange: e => setOldPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"newPassword\",\n        children: [\"Nouveau mot de passe\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"newPassword\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: [\"Confirmer mot de passe\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.cancelButton,\n          onClick: onClose,\n          children: \"Annuler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.confirmButton,\n          onClick: changePass,\n          disabled: isLoading,\n          children: isLoading ? 'Chargement...' : 'Valider'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(ChangePass, \"0+mMg/2gmawQ0jPvHlYMKMJI+dE=\");\n_c = ChangePass;\nChangePass.propTypes = {\n  onClose: PropTypes.func.isRequired\n};\nexport default ChangePass;\nvar _c;\n$RefreshReg$(_c, \"ChangePass\");","map":{"version":3,"names":["React","useState","useEffect","axios","PropTypes","styles","API_ROUTES","ChangePass","onClose","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","isLoading","setIsLoading","notification","setNotification","error","message","handleEscape","event","key","document","addEventListener","removeEventListener","handleClickOutside","target","classList","contains","modalBackground","changePass","response","post","CHANGE_PASS","status","err","data","modalContent","errorMessage","successMessage","e","value","buttonContainer","cancelButton","confirmButton","propTypes","func","isRequired"],"sources":["C:/Users/chokd/Documents/P3/Projet7-Back-end/frontend/src/Modals/ChangePass/ChangePass.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport styles from './ChangePass.module.css';\nimport { API_ROUTES } from '../../utils/constants';\n\nfunction ChangePass({ onClose }) {\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [notification, setNotification] = useState({ error: false, message: '' });\n\n  // Fermer la modal en appuyant sur \"Échap\"\n  useEffect(() => {\n    const handleEscape = (event) => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n    document.addEventListener('keydown', handleEscape);\n    return () => document.removeEventListener('keydown', handleEscape);\n  }, [onClose]);\n\n  const handleClickOutside = (event) => {\n    if (event.target.classList.contains(styles.modalBackground)) {\n      onClose();\n    }\n  };\n\n  const changePass = async () => {\n    if (newPassword !== confirmPassword) {\n      setNotification({ error: true, message: 'Les mots de passe ne correspondent pas.' });\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      const response = await axios.post(API_ROUTES.CHANGE_PASS, {\n        oldPassword,\n        newPassword,\n      });\n\n      if (response.status !== 200) {\n        setNotification({ error: true, message: 'Une erreur est survenue.' });\n      } else {\n        setNotification({ error: false, message: 'Mot de passe changé avec succès !' });\n        onClose(); // Ferme la modal après validation\n      }\n    } catch (err) {\n      setNotification({ error: true, message: err.response?.data?.message || 'Une erreur est survenue.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div\n      className={styles.modalBackground}\n      onClick={handleClickOutside}\n      role=\"presentation\"\n    >\n      <div className={styles.modalContent}>\n        <h2 id=\"change-pass-title\">Changer le mot de passe</h2>\n\n        {notification.message && (\n          <div className={notification.error ? styles.errorMessage : styles.successMessage}>\n            {notification.message}\n          </div>\n        )}\n\n        <label htmlFor=\"oldPassword\">\n          Ancien mot de passe\n          <input\n            type=\"password\"\n            id=\"oldPassword\"\n            value={oldPassword}\n            onChange={(e) => setOldPassword(e.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"newPassword\">\n          Nouveau mot de passe\n          <input\n            type=\"password\"\n            id=\"newPassword\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"confirmPassword\">\n          Confirmer mot de passe\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </label>\n\n        <div className={styles.buttonContainer}>\n          <button type=\"button\" className={styles.cancelButton} onClick={onClose}>\n            Annuler\n          </button>\n          <button type=\"submit\" className={styles.confirmButton} onClick={changePass} disabled={isLoading}>\n            {isLoading ? 'Chargement...' : 'Valider'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nChangePass.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ChangePass;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}