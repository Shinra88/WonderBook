{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chokd\\\\Documents\\\\P3\\\\Projet7-Back-end\\\\frontend\\\\src\\\\components\\\\GenreSelector\\\\GenreSelector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './GenreSelector.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenreSelector(_ref) {\n  _s();\n  let {\n    categories,\n    onSelectGenres\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const toggleDropdown = () => setIsOpen(!isOpen);\n  const handleGenreClick = genre => {\n    if (selectedGenres.includes(genre)) {\n      setSelectedGenres(selectedGenres.filter(g => g !== genre));\n    } else if (selectedGenres.length < 2) {\n      setSelectedGenres([...selectedGenres, genre]);\n    }\n  };\n  const handleApplySelection = () => {\n    setIsOpen(false);\n    onSelectGenres(selectedGenres);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.genreSelectorContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.dropdownButton,\n      onClick: toggleDropdown,\n      children: selectedGenres.length > 0 ? selectedGenres.join(', ') : 'Choisir des genres'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dropdownMenu,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.genreList,\n        children: categories.map(genre => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.genreItem,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedGenres.includes(genre),\n              onChange: () => handleGenreClick(genre),\n              disabled: !selectedGenres.includes(genre) && selectedGenres.length >= 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), genre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)\n        }, genre, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.applyButton,\n        onClick: handleApplySelection,\n        disabled: selectedGenres.length === 0,\n        children: \"Valider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(GenreSelector, \"TOCWc3Mto+39szTehWjMKw+IvWs=\");\n_c = GenreSelector;\nGenreSelector.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onSelectGenres: PropTypes.func.isRequired\n};\nexport default GenreSelector;\nvar _c;\n$RefreshReg$(_c, \"GenreSelector\");","map":{"version":3,"names":["React","useState","PropTypes","styles","GenreSelector","categories","onSelectGenres","isOpen","setIsOpen","selectedGenres","setSelectedGenres","toggleDropdown","handleGenreClick","genre","includes","filter","g","length","handleApplySelection","genreSelectorContainer","dropdownButton","join","dropdownMenu","genreList","map","genreItem","applyButton","propTypes","arrayOf","string","isRequired","func"],"sources":["C:/Users/chokd/Documents/P3/Projet7-Back-end/frontend/src/components/GenreSelector/GenreSelector.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './GenreSelector.module.css';\r\n\r\nfunction GenreSelector({ categories, onSelectGenres }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n\r\n  const toggleDropdown = () => setIsOpen(!isOpen);\r\n\r\n  const handleGenreClick = (genre) => {\r\n    if (selectedGenres.includes(genre)) {\r\n      setSelectedGenres(selectedGenres.filter((g) => g !== genre));\r\n    } else if (selectedGenres.length < 2) {\r\n      setSelectedGenres([...selectedGenres, genre]);\r\n    }\r\n  };\r\n\r\n  const handleApplySelection = () => {\r\n    setIsOpen(false);\r\n    onSelectGenres(selectedGenres);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.genreSelectorContainer}>\r\n      <button type=\"button\" className={styles.dropdownButton} onClick={toggleDropdown}>\r\n        {selectedGenres.length > 0 ? selectedGenres.join(', ') : 'Choisir des genres'}\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <div className={styles.dropdownMenu}>\r\n          <ul className={styles.genreList}>\r\n            {categories.map((genre) => (\r\n              <li key={genre} className={styles.genreItem}>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedGenres.includes(genre)}\r\n                    onChange={() => handleGenreClick(genre)}\r\n                    disabled={!selectedGenres.includes(genre) && selectedGenres.length >= 2}\r\n                  />\r\n                  {genre}\r\n                </label>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.applyButton}\r\n            onClick={handleApplySelection}\r\n            disabled={selectedGenres.length === 0}\r\n          >\r\n            Valider\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nGenreSelector.propTypes = {\r\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onSelectGenres: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default GenreSelector;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,4BAA4B;AAAC;AAEhD,SAASC,aAAa,OAAiC;EAAA;EAAA,IAAhC;IAAEC,UAAU;IAAEC;EAAe,CAAC;EACnD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMU,cAAc,GAAG,MAAMH,SAAS,CAAC,CAACD,MAAM,CAAC;EAE/C,MAAMK,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAIJ,cAAc,CAACK,QAAQ,CAACD,KAAK,CAAC,EAAE;MAClCH,iBAAiB,CAACD,cAAc,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKH,KAAK,CAAC,CAAC;IAC9D,CAAC,MAAM,IAAIJ,cAAc,CAACQ,MAAM,GAAG,CAAC,EAAE;MACpCP,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEI,KAAK,CAAC,CAAC;IAC/C;EACF,CAAC;EAED,MAAMK,oBAAoB,GAAG,MAAM;IACjCV,SAAS,CAAC,KAAK,CAAC;IAChBF,cAAc,CAACG,cAAc,CAAC;EAChC,CAAC;EAED,oBACE;IAAK,SAAS,EAAEN,MAAM,CAACgB,sBAAuB;IAAA,wBAC5C;MAAQ,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAEhB,MAAM,CAACiB,cAAe;MAAC,OAAO,EAAET,cAAe;MAAA,UAC7EF,cAAc,CAACQ,MAAM,GAAG,CAAC,GAAGR,cAAc,CAACY,IAAI,CAAC,IAAI,CAAC,GAAG;IAAoB;MAAA;MAAA;MAAA;IAAA,QACtE,EAERd,MAAM,iBACL;MAAK,SAAS,EAAEJ,MAAM,CAACmB,YAAa;MAAA,wBAClC;QAAI,SAAS,EAAEnB,MAAM,CAACoB,SAAU;QAAA,UAC7BlB,UAAU,CAACmB,GAAG,CAAEX,KAAK,iBACpB;UAAgB,SAAS,EAAEV,MAAM,CAACsB,SAAU;UAAA,uBAC1C;YAAA,wBACE;cACE,IAAI,EAAC,UAAU;cACf,OAAO,EAAEhB,cAAc,CAACK,QAAQ,CAACD,KAAK,CAAE;cACxC,QAAQ,EAAE,MAAMD,gBAAgB,CAACC,KAAK,CAAE;cACxC,QAAQ,EAAE,CAACJ,cAAc,CAACK,QAAQ,CAACD,KAAK,CAAC,IAAIJ,cAAc,CAACQ,MAAM,IAAI;YAAE;cAAA;cAAA;cAAA;YAAA,QACxE,EACDJ,KAAK;UAAA;YAAA;YAAA;YAAA;UAAA;QACA,GATDA,KAAK;UAAA;UAAA;UAAA;QAAA,QAWf;MAAC;QAAA;QAAA;QAAA;MAAA,QACC,eACL;QACE,IAAI,EAAC,QAAQ;QACb,SAAS,EAAEV,MAAM,CAACuB,WAAY;QAC9B,OAAO,EAAER,oBAAqB;QAC9B,QAAQ,EAAET,cAAc,CAACQ,MAAM,KAAK,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAG/B;IAAA;MAAA;MAAA;MAAA;IAAA,QAEZ;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAtDQb,aAAa;AAAA,KAAbA,aAAa;AAwDtBA,aAAa,CAACuB,SAAS,GAAG;EACxBtB,UAAU,EAAEH,SAAS,CAAC0B,OAAO,CAAC1B,SAAS,CAAC2B,MAAM,CAAC,CAACC,UAAU;EAC1DxB,cAAc,EAAEJ,SAAS,CAAC6B,IAAI,CAACD;AACjC,CAAC;AAED,eAAe1B,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}