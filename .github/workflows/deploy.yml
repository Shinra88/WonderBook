name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - prod
  pull_request:
    branches:
      - main
      - prod

jobs:
  # 🧪 JOB 1: Tests and Quality code
  test-and-quality:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint
        continue-on-error: false

      - name: 🎨 Check Prettier formatting
        run: npm run format:check
        continue-on-error: true

      - name: 🧪 Run unit tests
        run: npm run test:run
        env:
          CI: true

      - name: 📊 Generate coverage report
        run: npm run test:coverage
        continue-on-error: true

      - name: 🔒 Security audit
        run: npm audit --audit-level moderate
        continue-on-error: true

      - name: 🏗️ Test build
        run: npm run build
        env:
          VITE_RECAPTCHA_SITE_KEY: ${{ secrets.RECAPTCHA_SITE_KEY }}

  # 🏗️ JOB 2: Build for deployment
  build-for-deploy:
    needs: test-and-quality
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/prod' && github.event_name == 'push'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build
        env:
          VITE_RECAPTCHA_SITE_KEY: ${{ secrets.RECAPTCHA_SITE_KEY }}

      - name: 🔍 Verify build output
        run: |
          ls -la dist/
          test -f dist/index.html || exit 1
          test -d dist/assets || exit 1
          echo "✅ Build verification successful"

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 1

  # 🚀 JOB 3: DDeployment
  deploy:
    needs: build-for-deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/prod' && github.event_name == 'push'
    steps:
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: 🚀 Deploy to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete --cache-control "public, max-age=31536000, immutable"
        env:
          AWS_S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-3
          SOURCE_DIR: dist

      - name: ♻️ Invalidate CloudFront cache
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          PATHS: '/*'
          AWS_REGION: eu-west-3
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ✅ Deployment success
        run: |
          echo "✅ Deployment completed successfully!"
          echo "🌐 Application deployed to S3"
          echo "♻️ CloudFront cache invalidated"

  # 🔄 JOB 4: Post-deployment verification
  verify-deployment:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/prod' && github.event_name == 'push'
    steps:
      - name: 🏥 Basic health check
        run: |
          echo "🔍 Performing post-deployment checks..."
          echo "✅ Pipeline completed successfully!"
          # Ajoutez ici vos vérifications post-déploiement
          # curl -f https://votre-domaine.com || exit 1
